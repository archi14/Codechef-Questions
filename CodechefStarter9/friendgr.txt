#include <iostream>
#include <bits/stdc++.h>

using namespace std;
/** We have to take care of four cases here:
1. if this is a new group we would want to move the friend to i+1 instead to cover the future cases.
2. if the distance between the current and last friend is smaller than k then also we want to move current friend to i+1.
3. if the distance between current and last is k+1, then move current to i-1
4. If the distance is greater than k+1, then move current friend to i+1 with it being in new group and to handle new cases.

**/
int main() {
    int t;
    cin>>t;
    while(t--)
    {
        int n,k;
        cin>>n>>k;
        string a;
        cin>>a;
        int last=-1,group=0,i=0;
        while(i<n)
        {
            if(a[i]=='1')
            {
                if(last==-1)
                {
                    group=1;
                    last=i+1;
                }else
                {
                    int distance = i-last;
                    if(distance<=k)
                    {
                        if(distance!=k)
                        {
                            last = i+1;
                        }else
                        {
                            last=i;
                        }
                    }else if(distance-1<=k)
                    {
                        last = i-1;
                    }else
                    {
                        last=i+1;
                        group++;
                    }
                }
            }
            i++;
        }
        
        cout<<group<<endl;
    }
}
