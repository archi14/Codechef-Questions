#include <iostream>
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

ll getGcd(ll a,ll b)
{
    if(b==0) return a;
    return getGcd(b,a%b);
}

#simply get the total numbers divisible by a and by b then substract 2*lcm(a,b) count from that.
# to get number in range(0,a] divisible by b just compute a/b
int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    ll n,a,b,k;
	    cin>>n>>a>>b>>k;
	    ll count=0;
	    ll g = getGcd(a,b);
	    ll lcm = (a*b)/g;
	    count=n/a+n/b-2*(n/lcm);
	    if(count>=k)
	    {
	        cout<<"Win"<<endl;
	    }else
	    {
	        cout<<"Lose"<<endl;
	    }
	}
}
