#include <iostream>
#include <bits/stdc++.h>
using namespace std;
/**
I am using a priority_queue in this question(max heap), the basic idea is to minimize the 
value of x, from the greater quantity flavors, but we want to maximize the number of flavors
for Sebrina, so I don't use all of the candies of a flavor and keep 1 from it, at the end of 
all flavor have 1 candy left, then we can use that.
**/
int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    int n,x;
	    cin>>n>>x;
	    map<int,int> typeCount;
        for(int i=0;i<n;i++)
        {
            int flavor;
            cin>>flavor;
            if(typeCount.find(flavor)!=typeCount.end())
            {
                typeCount[flavor]++;
            }else
            {
                typeCount[flavor]=1;
            }
        
        }
        if(x==n)
        {
            cout<<"0"<<endl;
        }else
        {
            int totalFlavors = typeCount.size();
            priority_queue<int> pq;
            for(auto itr = typeCount.begin();itr!=typeCount.end();itr++)
            {
                pq.push(itr->second);
            }       
        
            while(x!=0 && !pq.empty())
            {
                int count = pq.top();
                //<<count;
                pq.pop();
                if(count==1)
                {
                    x-=1;
                    totalFlavors -= 1;
                }else
                {
                    if(x<count)
	                    {
	                        break;
	                    }else
	                    {
	                        x-=count-1;
	                    }
	                    pq.push(1);
	            }
	        }
	        cout<<totalFlavors<<endl;       
        }
	}
}
